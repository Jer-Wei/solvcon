============
Installation
============

The installation of Solvcon_ is easy and automated.  The build tool (SCons_)
can even download some of the external dependency for you (if you have Internet
connection).

.. _Solvcon: http://cfd.eng.ohio-state.edu/~yungyuc/solvcon/

Solvcon is developed mainly with Python_, partly with FORTRAN 90/95.  It 
supports both Linux and Windows.

.. _SCons: http://www.scons.org/

.. _Python: http://www.python.org/

Dependencies
============

The following are the required dependent softwares.  You have to install them 
before you can build and install Solvcon_:

* Python_ 2.5+.

* A FORTRAN 90/95 compiler.  gfortran_ 4.3+ is suggested.

* A C compiler.  gcc_ 4.3+ is suggested.

* Numpy_ 1.2.1+.

* Scons_ 1.2+.

* Metis_ 4.0.1.

.. _gfortran: http://gcc.gnu.org/fortran/
.. _gcc: http://gcc.gnu.org/
.. _Numpy: http://www.numpy.org/
.. _Metis: http://glaros.dtc.umn.edu/gkhome/views/metis/

.. note:: You don't need to install Metis_ manually, since Solvcon will
   download and build it for you.  If you don't have Internet connection, you
   have to download the Metis_ tarball and put it into the ``dep/`` directory.

And there are also optional softwares you can install:

* Matplotlib_ 0.99+.

* Nose_ 0.11+.

* Sphinx_ 0.5.1+.

* Epydoc_ 3+.

* Mplayer_/mencoder.

.. _Matplotlib: http://matplotlib.sourceforge.net/
.. _Nose: http://somethingaboutorange.com/mrl/projects/nose/
.. _Sphinx: http://sphinx.pocoo.org/
.. _Epydoc: http://epydoc.sourceforge.net/
.. _Mplayer: http://www.mplayerhq.hu/

.. note:: If you don't install Matplotlib_, some of the pre-defined visualizing
   post-processors will not function.

If you are using Debian/Ubuntu, the following command can install all the
dependencies for you::

  $ apt-get install build-essentials gfortran gcc python2.5 python-numpy 
   python-matplotlib scons python-nose python-sphinx python-epydoc
   mplayer mencoder

Build/Compile
=============

After downloading the Solvcon_ package and installing all the required 
softwares, you should extract the package and change the directory into the
package root.  In the directory, execute SCons_ like::

  $ scons --download --extract -Q

The builder will download all the needed external source package (such as
Metis_) and build the software.  By default it uses gfortran_ and gcc_ as the
compilers.  If you just want to recompile the package, you can omit the
``--download`` and ``--extract`` switch and use::

  $ scons -Q

After Solvcon_ is built, if you have installed Nose_, you can run::

  $ nosetests

and it will test if the build is functioning correctly.  The result will be
something similar to::

  ..............................................................................
  ----------------------------------------------------------------------
  Ran 78 tests in 0.656s

  OK

if everything goes well.

If you have Sphinx_ and Epydoc_ installed, run::

  $ scons doc

will build this documentation and the API documentation.  You can find both
documentations in ``doc/`` directory.

.. note:: Sphinx_ requires docutils_, and the docstrings inside Solvcon_ also 
   require docutils_.  You have to install docutils_ in order to build the
   documentation.

   If you want to have syntax highlighting in the documentation generated by 
   Sphinx_, you need also install Pygments_.

.. _docutils: http://docutils.sf.net/

.. _Pygments: http://pygments.org/

Install
=======

Currently you don't need to "install" Solvcon_.  The only thing you need to do
is to make your Python_ recognize the built Solvcon_.  You can do it by adding
the path to the Solvcon_ package into the environment variable ``PYTHONPATH``.

.. vim: set ft=rst ff=unix fenc=utf8 ai:
